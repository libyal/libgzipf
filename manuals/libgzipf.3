.Dd July 17, 2019
.Dt libgzipf 3
.Os libgzipf
.Sh NAME
.Nm libgzipf.h
.Nd Library to access the GZIP file format
.Sh SYNOPSIS
.In libgzipf.h
.Pp
Support functions
.Ft const char *
.Fn libgzipf_get_version "void"
.Ft int
.Fn libgzipf_get_access_flags_read "void"
.Ft int
.Fn libgzipf_get_codepage "int *codepage" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_set_codepage "int codepage" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_check_file_signature "const char *filename" "libgzipf_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libgzipf_check_file_signature_wide "const wchar_t *filename" "libgzipf_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libgzipf_check_file_signature_file_io_handle "libbfio_handle_t *file_io_handle" "libgzipf_error_t **error"
.Pp
Notify functions
.Ft void
.Fn libgzipf_notify_set_verbose "int verbose"
.Ft int
.Fn libgzipf_notify_set_stream "FILE *stream" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_notify_stream_open "const char *filename" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_notify_stream_close "libgzipf_error_t **error"
.Pp
Error functions
.Ft void
.Fn libgzipf_error_free "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_error_fprint "libgzipf_error_t *error" "FILE *stream"
.Ft int
.Fn libgzipf_error_sprint "libgzipf_error_t *error" "char *string" "size_t size"
.Ft int
.Fn libgzipf_error_backtrace_fprint "libgzipf_error_t *error" "FILE *stream"
.Ft int
.Fn libgzipf_error_backtrace_sprint "libgzipf_error_t *error" "char *string" "size_t size"
.Pp
File functions
.Ft int
.Fn libgzipf_file_initialize "libgzipf_file_t **file" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_file_free "libgzipf_file_t **file" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_file_signal_abort "libgzipf_file_t *file" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_file_open "libgzipf_file_t *file" "const char *filename" "int access_flags" "libgzipf_error_t **error"
.Ft int
.Fn libgzipf_file_close "libgzipf_file_t *file" "libgzipf_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libgzipf_file_open_wide "libgzipf_file_t *file" "const wchar_t *filename" "int access_flags" "libgzipf_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libgzipf_file_open_file_io_handle "libgzipf_file_t *file" "libbfio_handle_t *file_io_handle" "int access_flags" "libgzipf_error_t **error"
.Sh DESCRIPTION
The
.Fn libgzipf_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or \-1 on error, dependent on the return type.
For the actual return values see "libgzipf.h".
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh NOTES
libgzipf can be compiled with wide character support (wchar_t).
.sp
To compile libgzipf with wide character support use:
.Ar ./configure --enable-wide-character-type=yes
 or define:
.Ar _UNICODE
 or
.Ar UNICODE
 during compilation.
.sp
.Ar LIBGZIPF_WIDE_CHARACTER_TYPE
 in libgzipf/features.h can be used to determine if libgzipf was compiled with wide character support.
.Sh BUGS
Please report bugs of any kind on the project issue tracker: https://github.com/libyal/libgzipf/issues
.Sh AUTHOR
These man pages are generated from "libgzipf.h".
.Sh COPYRIGHT
Copyright (C) 2019, Joachim Metz <joachim.metz@gmail.com>.
.sp
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libgzipf.h include file
